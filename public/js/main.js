// Generated by CoffeeScript 1.12.3
(function() {
  jQuery(document).ready(function($) {
    var app;
    app = {
      force_numbers: function(e) {
        var charValue, valid;
        if (e.keyCode === 13) {
          app.add_number();
          return false;
        }
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 110, 190]) !== -1 || (e.keyCode === 65 && e.ctrlKey === true) || (e.keyCode >= 35 && e.keyCode <= 39)) {
          return false;
        }
        charValue = String.fromCharCode(e.keyCode);
        valid = /^[0-9]+$/.test(charValue);
        if (!valid) {
          return e.preventDefault();
        }
      },
      add_number: function() {
        var exists, val;
        val = $('input.number').val();
        if (val.length === 0) {
          return false;
        }
        exists = false;
        $.each($('.boxes .box'), function() {
          if (val === $(this).text()) {
            return exists = true;
          }
        });
        if (!exists) {
          $('.numbers .boxes').append('<div class="box" id="' + val + '">' + val + '</div>');
        }
        return $('input.number').val('').focus();
      },
      sort_number: function(a, b) {
        return a - b;
      },
      get_numbers: function() {
        var numbers;
        numbers = [];
        $.each($('.numbers .boxes .box'), function() {
          return numbers.push(parseInt($(this).text()));
        });
        return numbers.sort(app.sort_number);
      },
      clone_number: function(index, number) {
        var $div;
        $div = $('.numbers .boxes #' + number);
        $('.ordered').append($div.clone());
        return $('.ordered div').css('visibility', 'hidden');
      },
      move_number: function(element, pos) {
        var $parent_offset, $target_element, ordered_top, target_left, target_top;
        $target_element = $($('.ordered div')[pos]);
        $parent_offset = $('.numbers').offset();
        ordered_top = $('.ordered div').offset().top;
        target_top = ordered_top - $parent_offset.top;
        target_left = $target_element.offset().left - $parent_offset.left;
        $(element).css('position', 'absolute');
        $(element).css('width', 'auto');
        $(element).animate({
          top: target_top + "px"
        }, 1000);
        $(element).animate({
          left: target_left + "px"
        }, 1000);
        return $(element).hide('slow', function() {
          $target_element.css('visibility', 'visible');
          return $(element).remove();
        });
      },
      sort: function() {
        var numbers;
        $('.sort').css('disabled', 'disabled');
        $('.ordered div').remove();
        numbers = app.get_numbers();
        $.each(numbers, function(index, number) {
          return app.clone_number(index, number);
        });
        return $.each($('.numbers .boxes .box').get().reverse(), function(i, element) {
          return setTimeout(function() {
            return app.move_number(element, numbers.indexOf(parseInt($(element).text())));
          }, 500 * i);
        });
      },
      init: function() {
        $('input.number').on('keypress', function(e) {
          return app.force_numbers(e);
        });
        $('button.add-number').on('click', function() {
          return app.add_number();
        });
        return $('.sort').on('click', function() {
          return app.sort();
        });
      }
    };
    return app.init();
  });

}).call(this);
